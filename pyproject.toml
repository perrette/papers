[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "papers-cli"
authors = [
    {name = "MahÃ© Perrette", email = "mahe.perrette@gmail.com"},
]
description='utilities to keep your PDF library organized'
readme = "README.md"
requires-python = ">=3.9"
keywords = ['bibtex', 'references','bibliography']
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "PyMuPDF",
    "unidecode",
    "crossrefapi",
    "bibtexparser",
    "scholarly",
    "rapidfuzz",
    "normality",
    "bs4",
    "setuptools",
]
dynamic = ["version"]

[project.optional-dependencies]
# all = ["package"]

[project.urls]
homepage = "https://github.com/perrette/papers"

[tool.setuptools_scm]
write_to = "papers/_version.py"

[project.scripts]
papers = "papers.__main__:main_clean_exit"

[tool.tox]
# Tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
legacy_tox_ini = """
[tox]
requires = tox-conda
envlist = clean, py39, py310, py311, py312, py313, report

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
passenv=HOME
commands = pytest --cov=papers --cov-append --cov-report=term-missing {posargs} -xv
deps =
    bibtexparser < 2.0.0
    PyMuPDF
    scholarly
    crossrefapi
    rapidfuzz
    unidecode
    normality
    bs4
    pytest
    pytest-cov
depends =
    {py39,py310,py311,py312,py313}: clean
    report: py39,py310,py311,py312,py313

[testenv:py39]
conda-deps =
	   python=3.9

[testenv:py310]
conda-deps =
	   python=3.10

[testenv:py311]
conda-deps =
	   python=3.11

[testenv:py312]
conda-deps =
	   python=3.12

[testenv:py313]
conda-deps =
	   python=3.13

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html


[testenv:clean]
deps = coverage
skip_install = true
commands =
    coverage erase

[pytest]
norecursedirs =
      .tox
      .git
"""
